<?php

namespace NiftyThrifty\ShopBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductCategoryRepository extends EntityRepository
{
    /**
     * Find collections for the navigation menu.  Currently all categories ordered
     * by name, but we can consider making this configurable via the database.
     */
    public function findNavigation()
    {
        $dql = "SELECT c
                  FROM NiftyThrifty\ShopBundle\Entity\ProductCategory c
                 WHERE c.inNavigation = :trueVal
                 ORDER BY c.navigationOrder, c.productCategoryName";
        return $this->runQuery($dql, array('trueVal' => 'yes'));
    }

    /**
     * Find category by collection.
     */
    public function findCategoriesInCollection($collection_id)
    {
        $dql = "SELECT distinct(c.productCategoryId), c.productCategoryName
                  FROM NiftyThrifty\ShopBundle\Entity\Product p, 
                       NiftyThrifty\ShopBundle\Entity\ProductCategory c, 
                       NiftyThrifty\ShopBundle\Entity\ProductCategorySize s
                 WHERE p.collectionId = :collectionValue
                   AND (p.productCategorySizeId = s.productCategorySizeId)
                   AND (s.productCategoryId = c.productCategoryId)
                 ORDER BY c.productCategoryName";
        return $this->runQuery($dql, array('collectionValue' => $collection_id));
    }

    /**
     * Find women's categories.
     */
    public function findCategoriesWomen()
    {
        $dql = "SELECT c.productCategoryId, c.productCategoryName
                  FROM NiftyThrifty\ShopBundle\Entity\ProductCategory c
                 WHERE c.productCategoryId < :firstVal
                 ORDER BY c.productCategoryName";
        return $this->runQuery($dql, array('firstVal' => 20));
    }
}
